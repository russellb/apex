{
    "swagger": "2.0",
    "info": {
        "description": "This is the Nexodus API Server.",
        "title": "Nexodus API",
        "contact": {
            "name": "The Nexodus Authors",
            "url": "https://github.com/nexodus-io/nexodus/issues"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/api/devices": {
            "get": {
                "description": "Lists all devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "List Devices",
                "operationId": "ListDevices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Device"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Add Devices",
                "operationId": "CreateDevice",
                "parameters": [
                    {
                        "description": "Add Device",
                        "name": "Device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddDevice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/models.ConflictsError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/devices/{id}": {
            "get": {
                "description": "Gets a device by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Get Devices",
                "operationId": "GetDevice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing device and associated IPAM lease",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Delete Device",
                "operationId": "DeleteDevice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a device by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Update Devices",
                "operationId": "UpdateDevice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Device Update",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateDevice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/devices/{id}/metadata": {
            "get": {
                "description": "Lists metadata for a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Metadata",
                "operationId": "GetDeviceMetadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeviceMetadata"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Delete all metadata for a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Delete all Device metadata",
                "operationId": "DeleteDeviceMetadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata Key",
                        "name": "key",
                        "in": "path"
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/devices/{id}/metadata/{key}": {
            "get": {
                "description": "Get metadata for a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device Metadata",
                "operationId": "GetDeviceMetadataKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeviceMetadataValue"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Delete a metadata key for a device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Delete a Device metadata key",
                "operationId": "DeleteDeviceMetadataKey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata Key",
                        "name": "key",
                        "in": "path"
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/fflags": {
            "get": {
                "description": "Lists all feature flags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FFlag"
                ],
                "summary": "List Feature Flags",
                "operationId": "ListFeatureFlags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/fflags/{name}": {
            "get": {
                "description": "Gets a Feature Flag by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FFlag"
                ],
                "summary": "Get Feature Flag",
                "operationId": "GetFeatureFlag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "feature flag name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/invitations": {
            "get": {
                "description": "Lists all invitations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invitation"
                ],
                "summary": "List Invitations",
                "operationId": "ListInvitations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Invitation"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an invitation to an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invitation"
                ],
                "summary": "Create an invitation",
                "operationId": "CreateInvitation",
                "parameters": [
                    {
                        "description": "Add Invitation",
                        "name": "Invitation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddInvitation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Invitation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/invitations/:invitation/accept": {
            "post": {
                "description": "Accept an invitation to an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invitation"
                ],
                "summary": "Accept an invitation",
                "operationId": "AcceptInvitation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invitation ID",
                        "name": "invitation",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/invitations/{invitation}": {
            "delete": {
                "description": "Deletes an existing invitation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Invitation"
                ],
                "summary": "Delete Invitation",
                "operationId": "DeleteInvitation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invitation ID",
                        "name": "invitation",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/organizations": {
            "get": {
                "description": "Lists all Organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "List Organizations",
                "operationId": "ListOrganizations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Organization"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a named organization with the given CIDR",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Create an Organization",
                "operationId": "CreateOrganization",
                "parameters": [
                    {
                        "description": "Add Organization",
                        "name": "Organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddOrganization"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/models.ConflictsError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/organizations/{id}": {
            "get": {
                "description": "Gets a Organization by Organization ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Get Organizations",
                "operationId": "GetOrganizations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an existing organization and associated IPAM prefix",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete Organization",
                "operationId": "DeleteOrganization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/organizations/{id}/devices": {
            "get": {
                "description": "Lists all users for this Organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List Users",
                "operationId": "ListUsersInOrganization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}/devices": {
            "get": {
                "description": "Lists all devices for this Organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "List Devices",
                "operationId": "ListDevicesInOrganization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "greater than revision",
                        "name": "gt_revision",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}/devices/{device_id}": {
            "get": {
                "description": "Gets a device in a organization by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Devices"
                ],
                "summary": "Get Device",
                "operationId": "GetDeviceInOrganization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Device ID",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}/security_group/{id}": {
            "get": {
                "description": "Gets a security group in an organization by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SecurityGroup"
                ],
                "summary": "Get SecurityGroup",
                "operationId": "GetSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Security Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SecurityGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}/security_groups": {
            "get": {
                "description": "Lists all Security Groups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SecurityGroup"
                ],
                "summary": "List Security Groups",
                "operationId": "ListSecurityGroups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SecurityGroup"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new Security Group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SecurityGroup"
                ],
                "summary": "Add SecurityGroup",
                "operationId": "CreateSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add SecurityGroup",
                        "name": "SecurityGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddSecurityGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.SecurityGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/models.ConflictsError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/organizations/{organization_id}/security_groups/{security_group_id}": {
            "delete": {
                "description": "Deletes an existing SecurityGroup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SecurityGroup"
                ],
                "summary": "Delete SecurityGroup",
                "operationId": "DeleteSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Security Group ID",
                        "name": "security_group_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.SecurityGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a Security Group by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SecurityGroup"
                ],
                "summary": "Update Security Group",
                "operationId": "UpdateSecurityGroup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Security Group ID",
                        "name": "security_group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Security Group Update",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateSecurityGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SecurityGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Lists all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List Users",
                "operationId": "ListUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "description": "Gets a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "operationId": "GetUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/api/users/{id}/organizations/{organization}": {
            "delete": {
                "description": "Deletes an existing organization associated to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Remove a User from an Organization",
                "operationId": "DeleteUserFromOrganization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.BaseError"
                        }
                    }
                }
            }
        },
        "/device/login/start": {
            "post": {
                "description": "Starts a device login request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Start Login",
                "operationId": "DeviceStart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeviceStartResponse"
                        }
                    }
                }
            }
        },
        "/web/claims": {
            "get": {
                "description": "Gets the claims of the users access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Claims",
                "operationId": "Claims",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/web/login/end": {
            "post": {
                "description": "Called auth server redirect to finish the Oauth login",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "End Web Login",
                "operationId": "WebEnd",
                "parameters": [
                    {
                        "description": "End Login",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginEndRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginEndResponse"
                        }
                    }
                }
            }
        },
        "/web/login/start": {
            "post": {
                "description": "Starts a login request for the frontend application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Start Web Login",
                "operationId": "WebStart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginStartResponse"
                        }
                    }
                }
            }
        },
        "/web/logout": {
            "post": {
                "description": "Returns the URL to logout the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "operationId": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LogoutResponse"
                        }
                    }
                }
            }
        },
        "/web/refresh": {
            "get": {
                "description": "Refreshes the access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh",
                "operationId": "Refresh",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/web/user_info": {
            "get": {
                "description": "Returns information about the currently logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Info",
                "operationId": "UserInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserInfoResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AddDevice": {
            "type": "object",
            "properties": {
                "child_prefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "172.16.42.0/24"
                    ]
                },
                "discovery": {
                    "type": "boolean"
                },
                "endpoint_local_address_ip4": {
                    "type": "string",
                    "example": "1.2.3.4"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Endpoint"
                    }
                },
                "hostname": {
                    "type": "string",
                    "example": "myhost"
                },
                "organization_id": {
                    "type": "string",
                    "example": "694aa002-5d19-495e-980b-3d8fd508ea10"
                },
                "os": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "relay": {
                    "type": "boolean"
                },
                "security_group_id": {
                    "type": "string"
                },
                "symmetric_nat": {
                    "type": "boolean"
                },
                "tunnel_ip": {
                    "type": "string",
                    "example": "1.2.3.4"
                },
                "tunnel_ip_v6": {
                    "type": "string",
                    "example": "200::1"
                },
                "user_id": {
                    "type": "string",
                    "example": "694aa002-5d19-495e-980b-3d8fd508ea10"
                }
            }
        },
        "models.AddInvitation": {
            "type": "object",
            "properties": {
                "organization_id": {
                    "type": "string"
                },
                "user_id": {
                    "description": "The user id to invite (one of username or user_id is required)",
                    "type": "string"
                },
                "user_name": {
                    "description": "The username to invite (one of username or user_id is required)",
                    "type": "string"
                }
            }
        },
        "models.AddOrganization": {
            "type": "object",
            "properties": {
                "cidr": {
                    "type": "string",
                    "example": "172.16.42.0/24"
                },
                "cidr_v6": {
                    "type": "string",
                    "example": "0200::/8"
                },
                "description": {
                    "type": "string",
                    "example": "The Red Zone"
                },
                "hub_zone": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "example": "zone-red"
                },
                "security_group_id": {
                    "type": "string"
                }
            }
        },
        "models.AddSecurityGroup": {
            "type": "object",
            "properties": {
                "group_description": {
                    "type": "string",
                    "example": "group_description"
                },
                "group_name": {
                    "type": "string",
                    "example": "group_name"
                },
                "inbound_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecurityRule"
                    }
                },
                "org_id": {
                    "type": "string"
                },
                "outbound_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecurityRule"
                    }
                }
            }
        },
        "models.BaseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "something bad"
                }
            }
        },
        "models.ConflictsError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "something bad"
                },
                "id": {
                    "type": "string",
                    "example": "a1fae5de-dd96-4b20-8362-95f6a574c4b1"
                }
            }
        },
        "models.Device": {
            "type": "object",
            "properties": {
                "allowed_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "child_prefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "discovery": {
                    "type": "boolean"
                },
                "endpoint_local_address_ip4": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Endpoint"
                    }
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "aa22666c-0f57-45cb-a449-16efecc04f2e"
                },
                "organization_id": {
                    "type": "string"
                },
                "organization_prefix": {
                    "type": "string"
                },
                "organization_prefix_v6": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "public_key": {
                    "type": "string"
                },
                "relay": {
                    "type": "boolean"
                },
                "revision": {
                    "type": "integer"
                },
                "security_group_id": {
                    "type": "string"
                },
                "symmetric_nat": {
                    "type": "boolean"
                },
                "tunnel_ip": {
                    "type": "string"
                },
                "tunnel_ip_v6": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.DeviceMetadata": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "models.DeviceMetadataValue": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "models.DeviceStartResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "device_authorization_endpoint": {
                    "description": "TODO: Remove this once golang/oauth2 supports device flow\nand when coreos/go-oidc adds device_authorization_endpoint discovery",
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                }
            }
        },
        "models.Endpoint": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "IP address and port of the endpoint.",
                    "type": "string",
                    "example": "10.1.1.1:51820"
                },
                "distance": {
                    "description": "Distance in milliseconds from the node to the ip address",
                    "type": "integer",
                    "example": 12
                },
                "source": {
                    "description": "How the endpoint was discovered",
                    "type": "string"
                }
            }
        },
        "models.Invitation": {
            "type": "object",
            "properties": {
                "expiry": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "aa22666c-0f57-45cb-a449-16efecc04f2e"
                },
                "organization_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.LoginEndRequest": {
            "type": "object",
            "properties": {
                "request_url": {
                    "type": "string"
                }
            }
        },
        "models.LoginEndResponse": {
            "type": "object",
            "properties": {
                "handled": {
                    "type": "boolean"
                },
                "logged_in": {
                    "type": "boolean"
                }
            }
        },
        "models.LoginStartResponse": {
            "type": "object",
            "properties": {
                "authorization_request_url": {
                    "type": "string"
                }
            }
        },
        "models.LogoutResponse": {
            "type": "object",
            "properties": {
                "logout_url": {
                    "type": "string"
                }
            }
        },
        "models.Organization": {
            "type": "object",
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "cidr_v6": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hub_zone": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "example": "aa22666c-0f57-45cb-a449-16efecc04f2e"
                },
                "invitations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Invitation"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "security_group_id": {
                    "type": "string"
                }
            }
        },
        "models.SecurityGroup": {
            "type": "object",
            "properties": {
                "group_description": {
                    "type": "string"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "aa22666c-0f57-45cb-a449-16efecc04f2e"
                },
                "inbound_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecurityRule"
                    }
                },
                "org_id": {
                    "type": "string"
                },
                "outbound_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecurityRule"
                    }
                }
            }
        },
        "models.SecurityRule": {
            "type": "object",
            "properties": {
                "from_port": {
                    "type": "integer"
                },
                "ip_protocol": {
                    "type": "string"
                },
                "ip_ranges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "to_port": {
                    "type": "integer"
                }
            }
        },
        "models.UpdateDevice": {
            "type": "object",
            "properties": {
                "child_prefix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "172.16.42.0/24"
                    ]
                },
                "endpoint_local_address_ip4": {
                    "type": "string",
                    "example": "1.2.3.4"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Endpoint"
                    }
                },
                "hostname": {
                    "type": "string",
                    "example": "myhost"
                },
                "organization_id": {
                    "type": "string",
                    "example": "694aa002-5d19-495e-980b-3d8fd508ea10"
                },
                "revision": {
                    "type": "integer"
                },
                "symmetric_nat": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateSecurityGroup": {
            "type": "object",
            "properties": {
                "group_description": {
                    "type": "string"
                },
                "group_name": {
                    "type": "string"
                },
                "inbound_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecurityRule"
                    }
                },
                "outbound_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SecurityRule"
                    }
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "description": "Since the ID comes from the IDP, we have no control over the format...",
                    "type": "string",
                    "example": "aa22666c-0f57-45cb-a449-16efecc04f2e"
                },
                "security_group_id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "models.UserInfoResponse": {
            "type": "object",
            "properties": {
                "family_name": {
                    "type": "string"
                },
                "given_name": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "preferred_username": {
                    "type": "string"
                },
                "sub": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://auth.try.nexodus.127.0.0.1.nip.io/",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "user": " Grants read and write access to resources owned by this user"
            }
        }
    }
}